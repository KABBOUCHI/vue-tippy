(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{264:function(e,t,n){"use strict";n.r(t);var i=n(6),o=Object(i.a)({},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"all-options"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#all-options","aria-hidden":"true"}},[e._v("#")]),e._v(" All Options")]),e._v(" "),n("blockquote",[n("p",[e._v("Below is a table of all the options you can supply.")])]),e._v(" "),n("table",[n("thead",[n("tr",[n("th",[e._v("Option")]),e._v(" "),n("th",{staticStyle:{"text-align":"center"}},[e._v("Type")]),e._v(" "),n("th",{staticStyle:{"text-align":"center"}},[e._v("Default")]),e._v(" "),n("th",[e._v("Description")])])]),e._v(" "),n("tbody",[n("tr",[n("td",[n("code",[e._v("a11y")])]),e._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("code",[e._v("boolean")])]),e._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("code",[e._v("true")])]),e._v(" "),n("td",[e._v("Short for "),n("code",[e._v("accessibility")]),e._v(" - ensures the reference element can receive focus so the tooltip can be activated by keyboard navigation by adding "),n("code",[e._v('tabindex="0"')]),e._v(" to the reference element.")])]),e._v(" "),n("tr",[n("td",[n("code",[e._v("animateFill")])]),e._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("code",[e._v("boolean")])]),e._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("code",[e._v("true")])]),e._v(" "),n("td",[e._v("Determines if the background fill color should be animated. Disabled if "),n("code",[e._v("arrow: true")]),e._v(".")])]),e._v(" "),n("tr",[n("td",[n("code",[e._v("allowHTML")])]),e._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("code",[e._v("boolean")])]),e._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("code",[e._v("true")])]),e._v(" "),n("td",[e._v("Determines if the tippy can have HTML content rendered inside of it. Make sure you are sanitizing any user data if rendering HTML to prevent XSS attacks.")])]),e._v(" "),n("tr",[n("td",[n("code",[e._v("animation")])]),e._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("code",[e._v("string")])]),e._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("code",[e._v('"shift-away"')])]),e._v(" "),n("td",[e._v("The type of transition animation. Possible values: "),n("code",[e._v('"shift-away"')]),e._v(", "),n("code",[e._v('"shift-toward"')]),e._v(", "),n("code",[e._v('"fade"')]),e._v(", "),n("code",[e._v('"scale"')]),e._v(", "),n("code",[e._v('"perspective"')])])]),e._v(" "),n("tr",[n("td",[n("code",[e._v("appendTo")])]),e._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("code",[e._v("string")]),e._v(", "),n("code",[e._v("Element")]),e._v(", "),n("code",[e._v("Function")])]),e._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("code",[e._v("document.body")])]),e._v(" "),n("td",[e._v("The element to append the tippy to. Specify the string "),n("code",[e._v('"parent"')]),e._v(" to append it to the reference element's parent. You can also define a function that takes the reference element as an argument and returns a new element.")])]),e._v(" "),n("tr",[n("td",[n("code",[e._v("aria")])]),e._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("code",[e._v("string")])]),e._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("code",[e._v('"describedby"')])]),e._v(" "),n("td",[e._v("The "),n("code",[e._v("aria-*")]),e._v(" attribute applied to the reference element. Use either "),n("code",[e._v('"describedby"')]),e._v(" or "),n("code",[e._v('"labelledby"')]),e._v(". Use a falsy value "),n("code",[e._v("null")]),e._v(" / "),n("code",[e._v("false")]),e._v(" to prevent the attribute from being added.")])]),e._v(" "),n("tr",[n("td",[n("code",[e._v("arrow")])]),e._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("code",[e._v("boolean")])]),e._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("code",[e._v("false")])]),e._v(" "),n("td",[e._v("Determines if an arrow should be added to the tippy pointing toward the reference element.")])]),e._v(" "),n("tr",[n("td",[n("code",[e._v("arrowType")])]),e._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("code",[e._v("string")])]),e._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("code",[e._v('"sharp"')])]),e._v(" "),n("td",[e._v("Determines the arrow type. Possible values: "),n("code",[e._v('"sharp"')]),e._v(", "),n("code",[e._v('"round"')])])]),e._v(" "),n("tr",[n("td",[n("code",[e._v("boundary")])]),e._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("code",[e._v("string")]),e._v(", "),n("code",[e._v("HTMLElement")])]),e._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("code",[e._v('"scrollParent"')])]),e._v(" "),n("td",[e._v("The boundary that Popper.js' "),n("code",[e._v("preventOverflow")]),e._v(" modifier adheres to. Possible values: "),n("code",[e._v('"scrollParent"')]),e._v(", "),n("code",[e._v('"window"')]),e._v(", "),n("code",[e._v('"viewport"')]),e._v(", or an "),n("code",[e._v("HTMLElement")]),e._v(".")])]),e._v(" "),n("tr",[n("td",[n("code",[e._v("content")])]),e._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("code",[e._v("string")]),e._v(", "),n("code",[e._v("Element")]),e._v(", "),n("code",[e._v("Function")])]),e._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("code",[e._v('""')])]),e._v(" "),n("td",[e._v("The content of the tippy. Along with a string or element, you can use a function that takes the reference element as an argument and returns content.")])]),e._v(" "),n("tr",[n("td",[n("code",[e._v("delay")])]),e._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("code",[e._v("number")]),e._v(", "),n("code",[e._v("[show, hide]")])]),e._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("code",[e._v("[0, 20]")])]),e._v(" "),n("td",[e._v("Delay in ms once a trigger event is fired before a tippy shows or hides. Specifying a number means both the show and hide delays are the same. Use "),n("code",[e._v("null")]),e._v(" in the array to use the default value.")])]),e._v(" "),n("tr",[n("td",[n("code",[e._v("duration")])]),e._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("code",[e._v("number")]),e._v(", "),n("code",[e._v("[show, hide]")])]),e._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("code",[e._v("[275, 250]")])]),e._v(" "),n("td",[e._v("Duration of the CSS transition animation in ms. Specifying a number means both the show and hide delays are the same. Use "),n("code",[e._v("null")]),e._v(" in the array to use the default value.")])]),e._v(" "),n("tr",[n("td",[n("code",[e._v("distance")])]),e._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("code",[e._v("number")])]),e._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("code",[e._v("10")])]),e._v(" "),n("td",[e._v("How far in pixels the tippy element is from the reference element. Only applies to a single axis and not to the parent popper element, see the "),n("code",[e._v("offset")]),e._v(" option.")])]),e._v(" "),n("tr",[n("td",[n("code",[e._v("flip")])]),e._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("code",[e._v("boolean")])]),e._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("code",[e._v("true")])]),e._v(" "),n("td",[e._v("Determines if the tippy flips so that it is placed within the viewport as best it can be if there is not enough room.")])]),e._v(" "),n("tr",[n("td",[n("code",[e._v("flipBehavior")])]),e._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("code",[e._v("string")]),e._v(", "),n("code",[e._v("string[]")])]),e._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("code",[e._v('"flip"')])]),e._v(" "),n("td",[e._v("Determines the order of flipping, i.e. which placements to prefer if a certain placement cannot be used. Use an array such as "),n("code",[e._v('["bottom", "left"]')]),e._v(' to prefer the "left" placement if "bottom" is unavailable, instead of "top".')])]),e._v(" "),n("tr",[n("td",[n("code",[e._v("flipOnUpdate")])]),e._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("code",[e._v("boolean")])]),e._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("code",[e._v("false")])]),e._v(" "),n("td",[e._v("Determines if the tippy should flip when necessary if its position updates while showing (for example, while scrolling, resize, or if the size of the tooltip changed).")])]),e._v(" "),n("tr",[n("td",[n("code",[e._v("followCursor")])]),e._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("code",[e._v("boolean")]),e._v(", "),n("code",[e._v("string")])]),e._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("code",[e._v("false")])]),e._v(" "),n("td",[e._v("Determines if the tippy follows the user's mouse cursor while showing. Use the strings "),n("code",[e._v('"vertical"')]),e._v(" or "),n("code",[e._v('"horizontal"')]),e._v(" to only follow the cursor on a single axis. Use "),n("code",[e._v('"initial"')]),e._v(" to place the tippy at the initial cursor position upon show, but prevent following it.")])]),e._v(" "),n("tr",[n("td",[n("code",[e._v("hideOnClick")])]),e._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("code",[e._v("boolean")]),e._v(", "),n("code",[e._v("string")])]),e._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("code",[e._v("true")])]),e._v(" "),n("td",[e._v("Determines if the tippy should hide if a click event was fired outside of it (i.e. clicking on the reference or the body). For click-triggered tippys, using "),n("code",[e._v("false")]),e._v(" will prevent the tippy from ever hiding once it is showing. To prevent clicks outside of the tippy from hiding it but still allow it to be toggled, use the string "),n("code",[e._v('"toggle"')]),e._v(".")])]),e._v(" "),n("tr",[n("td",[n("code",[e._v("ignoreAttributes")])]),e._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("code",[e._v("boolean")])]),e._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("code",[e._v("false")])]),e._v(" "),n("td",[e._v("Determines if "),n("code",[e._v("data-tippy-*")]),e._v(" attributes on the reference element should be ignored. Increases performance if you enable it.")])]),e._v(" "),n("tr",[n("td",[n("code",[e._v("inertia")])]),e._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("code",[e._v("boolean")])]),e._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("code",[e._v("false")])]),e._v(" "),n("td",[e._v("Determines if an inertial slingshot effect is applied to the CSS transition-timing-function.")])]),e._v(" "),n("tr",[n("td",[n("code",[e._v("interactive")])]),e._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("code",[e._v("boolean")])]),e._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("code",[e._v("false")])]),e._v(" "),n("td",[e._v("Determines if the tippy is interactive, i.e. it can be hovered over or clicked without hiding.")])]),e._v(" "),n("tr",[n("td",[n("code",[e._v("interactiveBorder")])]),e._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("code",[e._v("number")])]),e._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("code",[e._v("2")])]),e._v(" "),n("td",[e._v("Determines the size in pixels of the invisible border around a tippy which will prevent it from closing if the cursor left the element.")])]),e._v(" "),n("tr",[n("td",[n("code",[e._v("interactiveDebounce")])]),e._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("code",[e._v("number")])]),e._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("code",[e._v("0")])]),e._v(" "),n("td",[e._v("Debounces the internal "),n("code",[e._v("onMouseMove")]),e._v(" handler which determines when an interactive tippy should hide.")])]),e._v(" "),n("tr",[n("td",[n("code",[e._v("lazy")])]),e._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("code",[e._v("boolean")])]),e._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("code",[e._v("true")])]),e._v(" "),n("td",[e._v("Determines if the positioning engine (powered by Popper.js) is created lazily. That is, it's only created when necessary upon showing the tippy for the first time. If you need to access the "),n("code",[e._v("popperInstance")]),e._v(" synchronously after creation, set this to "),n("code",[e._v("false")]),e._v(". Please note that this decreases performance considerably.")])]),e._v(" "),n("tr",[n("td",[n("code",[e._v("maxWidth")])]),e._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("code",[e._v("number")]),e._v(", "),n("code",[e._v("string")])]),e._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("code",[e._v("350")])]),e._v(" "),n("td",[e._v("Determines the maximum width of the tippy - use a number for pixels, or a string to add units such as rem. In CSS, it's defined as "),n("code",[e._v("350px")]),e._v(" by default. This option applies the width to the "),n("code",[e._v("style")]),e._v(" attribute of the tippy element.")])]),e._v(" "),n("tr",[n("td",[n("code",[e._v("multiple")])]),e._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("code",[e._v("boolean")])]),e._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("code",[e._v("false")])]),e._v(" "),n("td",[e._v("Determines if the reference element can have multiple tippys applied to it.")])]),e._v(" "),n("tr",[n("td",[n("code",[e._v("offset")])]),e._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("code",[e._v("number")]),e._v(", "),n("code",[e._v("string")])]),e._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("code",[e._v("0")])]),e._v(" "),n("td",[e._v("Determines the offset of the tippy element. Unlike "),n("code",[e._v("distance")]),e._v(", it can work on both axes by using a string in the form "),n("code",[e._v('"x, y"')]),e._v(", such as "),n("code",[e._v('"50, 20"')]),e._v(". Avoid this option if using "),n("code",[e._v("interactive: true")]),e._v(".")])]),e._v(" "),n("tr",[n("td",[n("code",[e._v("onHidden")])]),e._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("code",[e._v("Function")])]),e._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("code",[e._v("noop")])]),e._v(" "),n("td",[e._v("Lifecycle function invoked when the tippy has fully transitioned out.")])]),e._v(" "),n("tr",[n("td",[n("code",[e._v("onHide")])]),e._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("code",[e._v("Function")])]),e._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("code",[e._v("noop")])]),e._v(" "),n("td",[e._v("Lifecycle function invoked when the tippy begins to transition out. You can cancel hiding by returning "),n("code",[e._v("false")]),e._v(" from this lifecycle.")])]),e._v(" "),n("tr",[n("td",[n("code",[e._v("onMount")])]),e._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("code",[e._v("Function")])]),e._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("code",[e._v("noop")])]),e._v(" "),n("td",[e._v("Lifecycle function invoked when the tippy has been mounted to the DOM.")])]),e._v(" "),n("tr",[n("td",[n("code",[e._v("onShow")])]),e._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("code",[e._v("Function")])]),e._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("code",[e._v("noop")])]),e._v(" "),n("td",[e._v("Lifecycle function invoked when the tippy begins to transition in. You can cancel showing by returning "),n("code",[e._v("false")]),e._v(" from this lifecycle.")])]),e._v(" "),n("tr",[n("td",[n("code",[e._v("onShown")])]),e._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("code",[e._v("Function")])]),e._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("code",[e._v("noop")])]),e._v(" "),n("td",[e._v("Lifecycle function invoked when the tippy has fully transitioned in.")])]),e._v(" "),n("tr",[n("td",[n("code",[e._v("placement")])]),e._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("code",[e._v("string")])]),e._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("code",[e._v('"top"')])]),e._v(" "),n("td",[e._v("Positions the tippy relative to its reference element. Use the suffix "),n("code",[e._v("-start")]),e._v(" or "),n("code",[e._v("-end")]),e._v(" to shift the tippy to the start or end of the reference element, instead of centering it. For example, "),n("code",[e._v("top-start")]),e._v(" or "),n("code",[e._v("left-end")]),e._v(".")])]),e._v(" "),n("tr",[n("td",[n("code",[e._v("popperOptions")])]),e._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("code",[e._v("object")])]),e._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("code",[e._v("{}")])]),e._v(" "),n("td",[e._v("Specify custom Popper.js options. See the "),n("a",{attrs:{href:"https://popper.js.org/popper-documentation.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Popper.js documentation"),n("OutboundLink")],1),e._v(" for more.")])]),e._v(" "),n("tr",[n("td",[n("code",[e._v("role")])]),e._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("code",[e._v("string")])]),e._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("code",[e._v('"tooltip"')])]),e._v(" "),n("td",[e._v("Specifies the "),n("code",[e._v("role")]),e._v(" attribute on the tippy element.")])]),e._v(" "),n("tr",[n("td",[n("code",[e._v("showOnInit")])]),e._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("code",[e._v("boolean")])]),e._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("code",[e._v("false")])]),e._v(" "),n("td",[e._v("Determines if the tippy will be shown immediately once the instance is created. If using on page load, use "),n("code",[e._v("sticky: true")]),e._v(" because the reference element can move around while the layout gets built by the browser after initialization (unless the layout is guaranteed to be static).")])]),e._v(" "),n("tr",[n("td",[n("code",[e._v("size")])]),e._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("code",[e._v("string")])]),e._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("code",[e._v('"regular"')])]),e._v(" "),n("td",[e._v("Determines the size of the tippy, defined in CSS. Possible values: "),n("code",[e._v('"small"')]),e._v(", "),n("code",[e._v('"regular"')]),e._v(", "),n("code",[e._v('"large"')])])]),e._v(" "),n("tr",[n("td",[n("code",[e._v("sticky")])]),e._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("code",[e._v("boolean")])]),e._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("code",[e._v("false")])]),e._v(" "),n("td",[e._v("Ensures the tippy stays stuck to its reference element if it moves around while showing. See the "),n("code",[e._v("updateDuration")]),e._v(" option to change the transition duration between position updates.")])]),e._v(" "),n("tr",[n("td",[n("code",[e._v("target")])]),e._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("code",[e._v("string")])]),e._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("code",[e._v('""')])]),e._v(" "),n("td",[e._v("CSS selector string used for event delegation. See "),n("a",{attrs:{href:"/misc#event-delegation"}},[e._v("Event delegation")]),e._v(" for more information.")])]),e._v(" "),n("tr",[n("td",[n("code",[e._v("theme")])]),e._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("code",[e._v("string")])]),e._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("code",[e._v('"dark"')])]),e._v(" "),n("td",[e._v("Themes added as classes (each separated by a space) to the tippy element's "),n("code",[e._v("classList")]),e._v(".")])]),e._v(" "),n("tr",[n("td",[n("code",[e._v("touch")])]),e._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("code",[e._v("boolean")])]),e._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("code",[e._v("true")])]),e._v(" "),n("td",[e._v("Determines if the tippy displays on touch devices.")])]),e._v(" "),n("tr",[n("td",[n("code",[e._v("touchHold")])]),e._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("code",[e._v("boolean")])]),e._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("code",[e._v("false")])]),e._v(" "),n("td",[e._v("Determines trigger behavior on touch devices. Instead of a tap on the reference to show and a tap elsewhere to hide the tippy, the reference must be pressed and held for the tippy to show. Letting go from the screen will hide it. To prevent the mobile context menu from appearing, ensure the element cannot be selected using user-select: none; and/or prevent the default behavior for the contextmenu event.")])]),e._v(" "),n("tr",[n("td",[n("code",[e._v("trigger")])]),e._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("code",[e._v("string")])]),e._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("code",[e._v('"mouseenter focus"')])]),e._v(" "),n("td",[e._v("The events (each separated by a space) which cause a tippy to show. Possible values: "),n("code",[e._v('"mouseenter"')]),e._v(", "),n("code",[e._v('"focus"')]),e._v(", "),n("code",[e._v('"click"')]),e._v(", "),n("code",[e._v('"manual"')]),e._v(". Use "),n("code",[e._v('"manual"')]),e._v(" to only trigger the tippy programmatically.")])]),e._v(" "),n("tr",[n("td",[n("code",[e._v("updateDuration")])]),e._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("code",[e._v("number")])]),e._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("code",[e._v("0")])]),e._v(" "),n("td",[e._v("The transition duration between position updates for the "),n("code",[e._v("sticky")]),e._v(" and "),n("code",[e._v("flipOnUpdate")]),e._v(" options.")])]),e._v(" "),n("tr",[n("td",[n("code",[e._v("wait")])]),e._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("code",[e._v("Function")])]),e._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("code",[e._v("null")])]),e._v(" "),n("td",[e._v("A function that, when defined, will wait until you manually invoke the "),n("code",[e._v("show()")]),e._v(" method when a tippy is triggered. It takes the tippy instance as the first argument, and the trigger event as the second argument.")])]),e._v(" "),n("tr",[n("td",[n("code",[e._v("zIndex")])]),e._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("code",[e._v("number")])]),e._v(" "),n("td",{staticStyle:{"text-align":"center"}},[n("code",[e._v("9999")])]),e._v(" "),n("td",[e._v("Determines the "),n("code",[e._v("z-index")]),e._v(" of the tippy.")])])])])])},[],!1,null,null,null);t.default=o.exports}}]);